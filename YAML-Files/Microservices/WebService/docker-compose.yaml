version: "3.9"

services:
  webservice:
    image: cenkcamkiran/gcloud-projects:webservice_v3.0
    #networks:
    #- microservices
    restart: on-failure
    container_name: converter_webservice
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_ACCESSKEY: ${MINIO_ACCESSKEY}
      MINIO_SECRETKEY: ${MINIO_SECRETKEY}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_AUDIO_BUCKET_NAME: ${MINIO_AUDIO_BUCKET_NAME}
      MINIO_VIDEO_BUCKET_NAME: ${MINIO_VIDEO_BUCKET_NAME}
      ELK_HOST: ${ELK_HOST}
      ELK_USERNAME: ${ELK_USERNAME}
      ELK_PASSWORD: ${ELK_PASSWORD}
      ELK_DEFAULT_INDEX: webservice_requestresponse_logs
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:4080
    # ports:
    #   - target: 4080
    #     host_ip: 127.0.0.1
    #     published: 4080
    #     protocol: tcp
    #     mode: host #host internal, ingress external. Is is similar to Kubernetes
    expose:
      - "4080"
    networks:
      default: null

networks:
  default:
    name: kong_default
